INTSourceChangelist:2944238
Availability:Public
Title:ソースからアンリアル エンジンをビルドする
Crumbs:%ROOT%, Programming, Programming/Development
Description:ソースからアンリアル エンジンをコンパイルする
Prereq:GettingStarted/DownloadingUnrealEngine
Related:GettingStarted
Related:Engine/Content/QuickStart
Related:Programming/QuickStart
Related:Engine/QuickStart
Related:Support/Builds
Version:4.9
SkillLevel:Advanced

%Globals:osselect_linux%

[TOC (start:2 end:3)]

## ソースからアンリアル エンジンをビルドする

[EXCERPT:Main]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		[INCLUDE:#windowscompile]
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		[INCLUDE:#maccompile]
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	linux
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		[INCLUDE:#linuxcompile]
	[/PARAM]
[/OBJECT]

<!--
[EXCERPT:windowscompile]
[REGION:note]
Microsoft Visual Studio 2015 がインストール済であることを確認してから、ソースからアンリアル エンジンをビルドしてください。
[/REGION]

1.	ルート ディレクトリ内で、**GenerateProjectFiles.bat** を実行してプロジェクト ファイルをセットアップします。

	[REGION:warning]
	すべてのプロジェクト ファイルは、Intermediate (中間) ファイルです (`[UE4Root]\Engine\Intermediate\ProjectFiles`)。新しいビルドを同期する度にこうしたプロジェクト ファイルを必ず生成し、最新状態にしてください。もし`Intermediate` フォルダを削除したら、'GenerateProjectFiles' バッチファイルを使用してプロジェクト ファイルを再生成する必要があります。
	[/REGION]

1.	プロジェクトを Visual Studio にロードするには、**UE4.sln をダブルクリック** します。

1.	ご自分のソリューション コンフィギュレーションを **Development Editor** に設定します。

	![](configMenu_updated.png)

1.	ソリューション プラットフォームを **Win64** に設定します。

	![](platform_menu_updated.png)

1.	**UE4** ターゲットを **右クリック** し、**Build** を選択します。

	![](BuildUE4.png)

	[REGION:note]
	システムの仕様に応じて、ソースからエンジンをコンパイルするには 10 分から 40 分程度かかることがあります。
	[/REGION]

1.	エンジンをコンパイルしたら、スタートアップ プロジェクトを **UE4** に設定します。

	![](SetUE4_StartPrj.png)

1.	**UE4** プロジェクトを **右クリック** し、 **'Debug' にマウスをかざし**、**'Start New Instance' をクリック** して、エディタを起動します。

	![](RunCompiledWindowsEditor.png)

	[REGION:tip]
	または、キーボード上で **F5 キー** を押して、エディタの新しいインスタンスを開始します。
	[/REGION]

1.	これで終わりです！エンジンをソースからコンパイルし、起動しました。

	![](CompiledEditor_Windows.png)

[/EXCERPT:windowscompile]
[EXCERPT:maccompile]
[REGION:note]
XCode の最新版がインストール済であることを確認してから、ソースからアンリアル エンジンをビルドしてください。
[/REGION]

1.	ルート ディレクトリ内で、**GenerateProjectFiles.command** を実行してプロジェクト ファイルをセットアップします。

1.	プロジェクトを XCode にロードするには、**UE4.xcodeproj をダブルクリック** します。

1.	ビルド ターゲットを設定するには、タイトルバーで **UE4Editor - Mac** for **My Mac** を選択します。

	![](SettingMacTarget.png)

1.	プロジェクトをビルドするには **Product > Build** を選択します。

	![](BuildingMacEditor.png)

	[REGION:note]
	システムの仕様に応じて、ソースからエンジンをコンパイルするには 15 分から 40 分程度かかることがあります。
	[/REGION]

1.	エンジンのコンパイル後、**Product > Run** の順に選択し、エディタを起動します。
		
	![](RunningMacEditor.png)

1.	これで終わりです！エンジンをソースからコンパイルし、起動しました。

	![](CompiledEditor_Mac.png)
[/EXCERPT:maccompile]
[EXCERPT:linuxcompile]
[REGION:warning]
弊社のデベロッパーおよびサポートチームは Ubuntu の最新版を使用しているため、他の Linux ディストリビューション (Ubuntu の他のバージョンも含めて) に対するサポートができない場合があります。
[/REGION]

1. ルート ディレクトリ内で、ターミナルから **Setup.sh** を実行し、プロジェクト ファイルを生成する準備のためにファイルをセットアップします。

	![](RunSetupShellScript_Linux.png)

1.	ルート ディレクトリ内で、ターミナルから **GenerateProjectFiles.sh** を実行してプロジェクト ファイルを生成します。 

	![](RunGenPrjFilesShellScript_Linux.png)

1.	プロジェクトをビルドするには、ターミナルから **make** を実行します。

	![](RunMakeFile_Linux.png)

	[REGION:tip]
	QtCreator、 CodeLite、 KDevelop、および CMake を使ってエンジンをビルドすることもできます。
	[/REGION]

1.	エンジンをコンパイルしたら、** cd Engine/Binaries/Linux/ ** をターミナルに入力して、エディタのバイナリ パスに移動します。

1.	エディタを起動するには、**UE4Editor** を実行します。

	![](RunUE4Editor_Linux.png)

	[REGION:warning]
	OpenGL 環境を作れない場合は、グラフィック ドライバーを更新する必要があるかもしれません (Ubuntu のドキュメントをご覧ください)。NVidia のバイナリ ドライバーを使用することをお勧めします (バージョン 343.xx 以上)。
  	[/REGION]

1.	これで終わりです！エンジンをソースからコンパイルし、起動しました。

	![](CompiledEditor_Linux.png)
[/EXCERPT:linuxcompile]
-->

## アンリアル エンジンの使用を開始する

[](GettingStarted) のドキュメントを参照してアンリアル エンジンの使用方法を学習しましょう！

UE4 の使用について取り急ぎ学習したい場合は、以下のチュートリアルをご覧ください。
*	[](Engine/Content/QuickStart)
*	[](Programming/QuickStart)
*	[](Engine/QuickStart)


[REGION:note]
UE4 のエディタ内ヘルプ機能は、疑問点を解消するのに役立ちます。
[/REGION]

[/EXCERPT:Main]

<!--Currently deprecated for the 'Building from Source' version

## アンリアル エンジンのコンパイル

アンリアル エンジン4 (UE4) は、UnrealBuildTool を利用したカスタムビルド方法を使用します。このツールはエンジンのコンパイルに関する全ての複雑な側面と要素を処理します。 

### ビルド コンフィギュレーション

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		全てのコンフィギュレーションがデフォルトで表示されるわけではありません。メインの UE4 ディレクトリにある [GenerateProjectFiles.bat](Programming/UnrealBuildSystem/ProjectFileGenerator) ファイルを編集して、随時追加されるコンフィギュレーションに対してプロジェクト ファイルを生成します。

		エンジンのコンパイル方法を決定する際に、アンリアル エンジンと UnrealbuildTool は異なるビルド コンフィギュレーションを使用します。使用するコンフィギュレーションは、作成するビルドの目的によって決定されます。

		以下は利用可能なコンフィギュレーションです。

		| ビルド コンフィギュレーション | 説明 |
		|-------------|-------------|
		| **Debug** | デバッグ コンフィギュレーションでエンジンとゲームコードの両方をビルドします。|
		| **DebugGame** | エンジンを最適化してビルドしますが、ゲームコードはデバッグ可能な状態のままにします。ゲーム モジュールのみをデバッグする場合に理想的なコンフィギュレーションです。|
		| **Development** | Release と同等のコンフィギュレーションです。エンジンとゲームコードの両方がこのコンフィギュレーションでビルドされます。 |
		| **Shipping** | 最適なパフォーマンスを実現し、ゲームを出荷するためのコンフィギュレーションです。コンソール コマンド、統計情報、プロファイリング ツールが取り除かれます。|
		| **Test** | このコンフィギュレーションは、**Shipping** コンフィギュレーションですが、一部のコンソール コマンド、統計情報、プロファイリング ツールが有効になっています。 |

		このビルド コンフィギュレーションは、Visual Studio のツールバーから設定することができます。

		![UE4 Solution - Configuration Menu](configuration_menu.png)
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		以下は利用可能なコンフィギュレーションです。

		| ビルド コンフィギュレーション | 説明 |
		| ------------------- | ----------- |
		| **Product > Build For > Running** | デバッグ コンフィギュレーションでエンジンとゲームコードの両方をビルドします。|
		| **Product > Build For > Profiling** | Release と同等のコンフィギュレーションです。エンジンとゲームコードの両方がこのコンフィギュレーションでビルドされます。 |

	[/PARAM]
[/OBJECT]

### ターゲット プラットフォーム

UE4 は現在、以下のプラットフォームをサポートしています。

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		* **Windows 32-bit**
		* **Windows 64-bit**


		エンジンそのものをビルドする場合は、**Win64** プラットフォームを使用します。

		![UE4 Solution - Platform Menu](platform_menu.png)
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		* **Mac 64-bit**
		* **iOS Device**


		エンジンそのものをビルドする場合は、**Mac 64-bit** プラットフォームを使用します。
	[/PARAM]
[/OBJECT]

(#BinaryNamingConvention)
### バイナリ命名規則

生成されるバイナリの名前は、ビルド時に使用されたコンフィギュレーションによって異なります。以下は一般的な命名規則です。

|エンジン モード | 命名規則 |
|----------- | ------------------|
| Editor	  | UE4Editor-Platform-Configuration.extension |
| Uncooked Game | UE4-Platform-Configuration.extension |

このルールの例外は PC プラットフォームで、Development コンフィギュレーションのビルド時に、このプラットフォームとコンフィギュレーションが省略されます。例えば、Win64 プラットフォームに対して生成されるエディタ実行ファイルの名前は以下となります。

| コンフィギュレーション | EXE 名 |
| ------------- | -------- |
| Debug | UE4Editor-Win64-Debug.exe |
| DebugGame | UE4Editor-Win64-DebugGame.exe |
| Development | UE4Editor.exe |


### エンジンのビルド

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		1.	ビルドしたいコンフィギュレーションに **Build Configuration** を設定します。この例では、**Development** に設定されています。利用可能な各コンフィギュレーションの詳細は [ビルドコンフィギュレーション](#ビルドコンフィギュレーション) セクションを参照してください。

			![UE4 Solution - Set Configuration to Development](config_development_menu.png)

		1.	**UE4** プロジェクトを **右クリック** します。 

			1. **Clean** を選んで、コンパイル済みまたはテンポラリ ファイルをクリーンアップします。この作業によって、次回のビルドが確実に完全な再ビルドになるようにします。

			1.	**Rebuild** を選んでエンジンを再コンパイルします。

		または、**UE4** プロジェクトがまだスタートアップ プロジェクトとして設定されている場合は以下の手順に従います。

		1. **Build Configuration** を設定します。

		1. **Build** メニューから以下を行います。

			1. **UE4 をクリーンアップ**

			1. **UE4 を再ビルド**
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		1. アクティブ スキームを **UE4Editor - Mac > My Mac 64-bit** に設定するようにします。

		1. **[product]** メニューから **Build For > Running** を選択します。
	[/PARAM]
[/OBJECT]
-->