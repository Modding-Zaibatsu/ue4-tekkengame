// Copyright (c) 2015 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/ctocpp/web_plugin_unstable_callback_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

void CefWebPluginUnstableCallbackCToCpp::IsUnstable(const CefString& path,
    bool unstable) {
  if (CEF_MEMBER_MISSING(struct_, is_unstable))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: path; type: string_byref_const
  DCHECK(!path.empty());
  if (path.empty())
    return;

  // Execute
  struct_->is_unstable(struct_,
      path.GetStruct(),
      unstable);
}


#ifndef NDEBUG
template<> base::AtomicRefCount CefCToCpp<CefWebPluginUnstableCallbackCToCpp,
    CefWebPluginUnstableCallback,
    cef_web_plugin_unstable_callback_t>::DebugObjCt = 0;
#endif

