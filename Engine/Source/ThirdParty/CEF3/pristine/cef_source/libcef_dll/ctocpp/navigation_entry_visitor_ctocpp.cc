// Copyright (c) 2015 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/cpptoc/navigation_entry_cpptoc.h"
#include "libcef_dll/ctocpp/navigation_entry_visitor_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

bool CefNavigationEntryVisitorCToCpp::Visit(CefRefPtr<CefNavigationEntry> entry,
    bool current, int index, int total) {
  if (CEF_MEMBER_MISSING(struct_, visit))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: entry; type: refptr_diff
  DCHECK(entry.get());
  if (!entry.get())
    return false;

  // Execute
  int _retval = struct_->visit(struct_,
      CefNavigationEntryCppToC::Wrap(entry),
      current,
      index,
      total);

  // Return type: bool
  return _retval?true:false;
}


#ifndef NDEBUG
template<> base::AtomicRefCount CefCToCpp<CefNavigationEntryVisitorCToCpp,
    CefNavigationEntryVisitor, cef_navigation_entry_visitor_t>::DebugObjCt =
    0;
#endif

